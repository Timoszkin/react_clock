{"version":3,"sources":["componenets/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","counter","timerID","setInterval","setState","console","log","this","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","activateState","deactivateState","setName","newName","Math","random","className","type","id","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,qBACjBC,QAAS,GAHb,uDAME,WAAqB,IAAD,OACZC,EAAUC,aAAY,WAC1B,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,KAEHS,KAAKH,SAAS,CAAEH,QAASC,MAb7B,gCAgBE,SAAmBM,GACbA,EAAUC,OAASF,KAAKG,MAAMD,MAEhCJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DF,KAAKG,MAAMD,SAnBhF,kCAuBE,WACMF,KAAKV,MAAMI,SACbU,cAAcJ,KAAKV,MAAMI,WAzB/B,oBA6BE,WACE,OACE,8BACGM,KAAKV,MAAMC,WAhCpB,GAA2Bc,IAAMC,WCiDlBC,E,4MAvDbjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,G,EAGbC,cAAgB,WACd,EAAKb,SAAS,CAAEW,gBAAgB,K,EAGlCG,gBAAkB,WAChB,EAAKd,SAAS,CAAEW,gBAAgB,K,EAGlCI,QAAU,WACR,IAAMC,EAAUC,KAAKC,SAErB,EAAKlB,SAAS,CAAEY,UAAWI,IAEd,EAAKvB,MAAMmB,W,4CAG1B,WACE,OACE,sBAAKO,UAAU,MAAf,UACE,6CACA,wBACEC,KAAK,SACLC,GAAG,YACHC,QAASnB,KAAKU,cAHhB,wBAOA,wBACEO,KAAK,SACLC,GAAG,YACHC,QAASnB,KAAKW,gBAHhB,wBAOA,wBACEM,KAAK,SACLC,GAAG,UACHC,QAASnB,KAAKY,QAHhB,6BAOA,uBAvBF,gBAyBG,IACAZ,KAAKV,MAAMkB,gBAAkB,cAAC,EAAD,CAAON,KAAMF,KAAKV,MAAMmB,mB,GAlD5CJ,IAAMC,WCDxBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6e39d1cc.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number,\n};\n\ntype State = {\n  date: string,\n  counter: NodeJS.Timeout | number,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date().toLocaleTimeString(),\n    counter: 0,\n  };\n\n  componentDidMount() {\n    const timerID = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(this.state.date);\n    }, 1000);\n\n    this.setState({ counter: timerID });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`)\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.counter) {\n      clearInterval(this.state.counter);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.date}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './componenets/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  activateState = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  deactivateState = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  setName = () => {\n    const newName = Math.random();\n\n    this.setState({ clockName: newName });\n    // eslint-disable-next-line\n    <Clock name={this.state.clockName} />;  // ?? where? \n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <button\n          type=\"button\"\n          id=\"ShowClock\"\n          onClick={this.activateState}\n        >\n          Show clock\n        </button>\n        <button\n          type=\"button\"\n          id=\"HideClock\"\n          onClick={this.deactivateState}\n        >\n          Hide clock\n        </button>\n        <button\n          type=\"button\"\n          id=\"SetName\"\n          onClick={this.setName}\n        >\n          Set random name\n        </button>\n        <br />\n        Current time:\n        {' '}\n        {this.state.isClockVisible && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}